---
description: 
globs: 
alwaysApply: true
---

# Task List

Guidelines for creating and managing task lists in markdown files to track project progress

## Task List Creation
1. Create task lists in a markdown file (in the project root under the folder `tasks/**`):
    - Create a separate file per feature and prefix it with an incremental ID following the naming schema: `001-feature-name.md`
    - Include a clear title and description of the feature being implemented

2. Structure the file with these sections:
    ```markdown
    # Feature Name Implementation

    Brief description of the feature and its purpose

    ## Completed Tasks
    - [x] Task 1 that has been completed

    ## In Progress Tasks
    - [ ] Task 2 currently being worked on

    ## Future Tasks
    - [ ] Task 3 planned for future implementation

    ## Implementation Plan
    Detailed description of how the feature will be implemented

    ## Relevant Files
    Links to files that this feature depends on
    ```

## Task List Maintenance

1. Update the task list as you progress:
   - Mark tasks as completed by changing `[ ]` to `[x]`
   - Add new tasks as they are identified
   - Move tasks between sections as appropriate

2. Keep "Relevant Files" section updated with:
   - File paths that have been created or modified
   - Brief descriptions of each file's purpose
   - Status indicators (e.g., âœ…) for completed components

3. Add implementation details:
   - Architecture decisions
   - Data flow descriptions
   - Technical components needed
   - Environment configuration

## AI Instructions

When working with task lists, the AI should:

1. Regularly update the task list file after implementing significant components
2. Mark completed tasks with [x] when finished
3. Add new tasks discovered during implementation
4. Maintain the "Relevant Files" section with accurate file paths and descriptions
5. Document implementation details, especially for complex features
6. When implementing tasks one by one, first check which task to implement next
7. After implementing a task, update the file to reflect progress

## Example Task Update

When updating a task from "In Progress" to "Completed":

```markdown
    ## In Progress Tasks

    - [ ] Implement database schema
    - [ ] Create API endpoints for data access

    ## Completed Tasks

    - [x] Set up project structure
    - [x] Configure environment variables
```

Should become:

```markdown
    ## In Progress Tasks

    - [ ] Create API endpoints for data access

    ## Completed Tasks

    - [x] Set up project structure
    - [x] Configure environment variables
    - [x] Implement database schema
```

## Working on Tasks
When working on a task, always refer to previous tasks that touches the same relevant files in order to make sure that you don't break a previous feature.
